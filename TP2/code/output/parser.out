Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> lista
Rule 1     lista -> DELIM_ABRIR listaa
Rule 2     listaa -> lcont DELIM_FECHAR
Rule 3     listaa -> DELIM_FECHAR
Rule 4     lcont -> NUM lcontt
Rule 5     lcont -> PAL lcontt
Rule 6     lcontt -> SEPARATOR NUM lcontt
Rule 7     lcontt -> SEPARATOR PAL lcontt
Rule 8     lcontt -> <empty>

Terminals, with rules where they appear

DELIM_ABRIR          : 1
DELIM_FECHAR         : 2 3
NUM                  : 4 6
PAL                  : 5 7
SEPARATOR            : 6 7
error                : 

Nonterminals, with rules where they appear

lcont                : 2
lcontt               : 4 5 6 7
lista                : 0
listaa               : 1

Parsing method: LALR

state 0

    (0) S' -> . lista
    (1) lista -> . DELIM_ABRIR listaa

    DELIM_ABRIR     shift and go to state 2

    lista                          shift and go to state 1

state 1

    (0) S' -> lista .



state 2

    (1) lista -> DELIM_ABRIR . listaa
    (2) listaa -> . lcont DELIM_FECHAR
    (3) listaa -> . DELIM_FECHAR
    (4) lcont -> . NUM lcontt
    (5) lcont -> . PAL lcontt

    DELIM_FECHAR    shift and go to state 5
    NUM             shift and go to state 6
    PAL             shift and go to state 7

    listaa                         shift and go to state 3
    lcont                          shift and go to state 4

state 3

    (1) lista -> DELIM_ABRIR listaa .

    $end            reduce using rule 1 (lista -> DELIM_ABRIR listaa .)


state 4

    (2) listaa -> lcont . DELIM_FECHAR

    DELIM_FECHAR    shift and go to state 8


state 5

    (3) listaa -> DELIM_FECHAR .

    $end            reduce using rule 3 (listaa -> DELIM_FECHAR .)


state 6

    (4) lcont -> NUM . lcontt
    (6) lcontt -> . SEPARATOR NUM lcontt
    (7) lcontt -> . SEPARATOR PAL lcontt
    (8) lcontt -> .

    SEPARATOR       shift and go to state 10
    DELIM_FECHAR    reduce using rule 8 (lcontt -> .)

    lcontt                         shift and go to state 9

state 7

    (5) lcont -> PAL . lcontt
    (6) lcontt -> . SEPARATOR NUM lcontt
    (7) lcontt -> . SEPARATOR PAL lcontt
    (8) lcontt -> .

    SEPARATOR       shift and go to state 10
    DELIM_FECHAR    reduce using rule 8 (lcontt -> .)

    lcontt                         shift and go to state 11

state 8

    (2) listaa -> lcont DELIM_FECHAR .

    $end            reduce using rule 2 (listaa -> lcont DELIM_FECHAR .)


state 9

    (4) lcont -> NUM lcontt .

    DELIM_FECHAR    reduce using rule 4 (lcont -> NUM lcontt .)


state 10

    (6) lcontt -> SEPARATOR . NUM lcontt
    (7) lcontt -> SEPARATOR . PAL lcontt

    NUM             shift and go to state 12
    PAL             shift and go to state 13


state 11

    (5) lcont -> PAL lcontt .

    DELIM_FECHAR    reduce using rule 5 (lcont -> PAL lcontt .)


state 12

    (6) lcontt -> SEPARATOR NUM . lcontt
    (6) lcontt -> . SEPARATOR NUM lcontt
    (7) lcontt -> . SEPARATOR PAL lcontt
    (8) lcontt -> .

    SEPARATOR       shift and go to state 10
    DELIM_FECHAR    reduce using rule 8 (lcontt -> .)

    lcontt                         shift and go to state 14

state 13

    (7) lcontt -> SEPARATOR PAL . lcontt
    (6) lcontt -> . SEPARATOR NUM lcontt
    (7) lcontt -> . SEPARATOR PAL lcontt
    (8) lcontt -> .

    SEPARATOR       shift and go to state 10
    DELIM_FECHAR    reduce using rule 8 (lcontt -> .)

    lcontt                         shift and go to state 15

state 14

    (6) lcontt -> SEPARATOR NUM lcontt .

    DELIM_FECHAR    reduce using rule 6 (lcontt -> SEPARATOR NUM lcontt .)


state 15

    (7) lcontt -> SEPARATOR PAL lcontt .

    DELIM_FECHAR    reduce using rule 7 (lcontt -> SEPARATOR PAL lcontt .)

